import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import yfinance as yf
from datetime import datetime, timedelta


st.set_page_config(page_icon="üê§", page_title="Aboulaala Maria")

st.header(':four: Simulation du put :chart_with_downwards_trend:')

with st.expander("Introduction:"):
    
    st.markdown("""
> Les options sont des d√©riv√©s financiers bas√©s sur la valeur des titres sous-jacents. Ils donnent √† l'acheteur le droit d'acheter (options d'achat) ou de vendre (options de vente) l'actif sous-jacent √† un prix pr√©d√©termin√© dans un d√©lai pr√©cis. Il existe √©galement deux styles d'options de base : am√©ricain et europ√©en. Les options am√©ricaines peuvent √™tre exerc√©es √† tout moment avant la date d'expiration de l'option, tandis que les options europ√©ennes ne peuvent √™tre exerc√©es qu'√† la date d'expiration. Ce Notebook plonge dans un mod√®le d'√©valuation des options pour comprendre l'√©valuation des options europ√©ennes
               
                
                """
    )
with st.form(key="my_form"):   
    start_date = st.date_input('Donner le premier jour')
    stock_name = st.selectbox(
    'donner le march√©',
    ('AAPL', 'MSFT'))
    nSim = st.number_input('Le prix initil du stock', step=1, min_value=1)

   

    st.form_submit_button("Simuler")



end_date = datetime.today()
stock_data = yf.download(
    stock_name,
    start = start_date,
    end= end_date
)
st.dataframe(stock_data, use_container_width=True)

daily_returns = stock_data['Adj Close'].pct_change(1)
stock_volatility = daily_returns.std()
st.write('la volatilit√© du stock est: ', stock_volatility)

# european option parametre
stock_price = stock_data['Adj Close'][-1]
strike_price = stock_price 
risk_free_rate = 0.04
maturity = 1.0


z = np.random.standard_normal(nSim) #brownien motion
S_fwd = stock_price * np.exp((risk_free_rate-0.5* stock_volatility**2)*maturity + stock_volatility*np.sqrt(maturity)*z)
payoff = np.maximum(strike_price- S_fwd , 0)
put = np.exp(-risk_free_rate*maturity) * np.sum(payoff)/nSim  

st.write('la valeur du put est', put)












st.markdown(
    """
---

 Realis√© par Aboulaala Maria                  
 Encadr√© par Pr. Brahim Elassri
    """
)